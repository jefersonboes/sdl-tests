
//#include "stdafx.h"

#include <SDL.h>

#define SCREEN_W 1024
#define SCREEN_H 768

void inline build_rect(SDL_Rect &rect, int x, int y, int w, int h)
{
	rect.x = x;
	rect.y = y;
	rect.w = w;
	rect.h = h;
}

int main(int argc, char** argv)
{
	SDL_Event event; 
	int quit = 0; 

	SDL_Init(SDL_INIT_VIDEO); 

	SDL_Window *window;

	window = SDL_CreateWindow("SDL Test", SDL_WINDOWPOS_UNDEFINED, SDL_WINDOWPOS_UNDEFINED, SCREEN_W, SCREEN_H, SDL_WINDOW_SHOWN);
	if (window == NULL) { printf("Window could not be created! SDL_Error: %s\n", SDL_GetError()); }


	SDL_Renderer *renderer = SDL_CreateRenderer(window, -1, SDL_RENDERER_ACCELERATED);

	
	SDL_Rect rect;
	build_rect(rect, 100, 100, 100, 100);

	int ti = SDL_GetTicks();
	int ti2 = SDL_GetTicks();

	int dirx = 1;
	int diry = 1;

	while (!quit)
	{
		while (SDL_PollEvent(&event))
		{
			if (event.type == SDL_QUIT) 
			{
				quit = 1;
			}
		}

		if (SDL_GetTicks() - ti2 > 5) {
			rect.x = rect.x + 1 * dirx;
			rect.y = rect.y + 1 * diry;

			if (rect.x > SCREEN_W - 100)
				dirx = -1;

			if (rect.y > SCREEN_H - 100)
				diry = -1;

			if (rect.x < 0)
				dirx = 1;

			if (rect.y < 0)
				diry = 1;

			ti2 = SDL_GetTicks();
		}

		if (SDL_GetTicks() - ti > 10) {
			ti = SDL_GetTicks();

			SDL_SetRenderDrawColor(renderer, 0x00, 0x00, 0x00, 0xFF);
			SDL_RenderClear(renderer);		
			SDL_SetRenderDrawColor(renderer, 0x28, 0x28, 0x28, 0xFF);
			SDL_RenderFillRect(renderer, &rect);
			SDL_RenderPresent(renderer);
		}
		else {
			SDL_Delay(1);
		}
	}

	SDL_Quit();

	return 0;
}
